    1  setenforce 0
    2  sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    3  swapoff -a
    4  cp /etc/fstab /etc/fstab.backup.original
    5  line=$(grep -n -m 1 swap /etc/fstab | cut -d ":" -f 1) && sed -e "${line}s/^/#/" /etc/fstab > /etc/fstab.bk
    6  cp /etc/fstab.bk /etc/fstab
    7  cat /etc/fstab
    8  modprobe br_netfilter
    9  if grep -q "^net.ipv4.ip_forward = 1" /etc/sysctl.conf; then echo false; else echo true;  fi
   10  cat <<EOF | tee /etc/sysctl.conf
   11  net.ipv4.ip_forward = 1
   12  EOF
   13  systemctl stop firewalld && systemctl disable firewalld && systemctl mask --now firewalld
   14  yum install epel-release yum-utils device-mapper-persistent-data lvm2 wget -y
   15  cat <<EOF | tee /etc/yum.repos.d/kubernetes.repo
   16  [kubernetes]
   17  name=Kubernetes
   18  baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
   19  enabled=1
   20  gpgcheck=0
   21  repo_gpgcheck=0
   22  gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
   23          https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
   24  EOF
   25  cat /etc/yum.repos.d/kubernetes.repo
   26  getfacl /etc/yum.repos.d/kubernetes.repo
   27  chmod 755 /etc/yum.repos.d/kubernetes.repo
   28  yum install -y kubelet-1.23.2-0 kubeadm-1.23.2-0 kubectl-1.23.2-0 --disableexcludes=kubernetes
   29  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
   30  br_netfilter
   31  EOF
   32  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
   33  net.bridge.bridge-nf-call-ip6tables = 1
   34  net.bridge.bridge-nf-call-iptables = 1
   35  cat <<EOF | tee /etc/sysctl.d/k8s.conf
   36  net.bridge.bridge-nf-call-ip6tables = 1
   37  net.bridge.bridge-nf-call-iptables = 1
   38  EOF
   39  cat /etc/sysctl.d/k8s.conf
   40  cat /etc/modules-load.d/k8s.conf
   41  sysctl --system
   42  dnf install containers-common
   43  systemctl enable --now kubelet
   44  cat <<EOF | tee /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
   45  # Note: This dropin only works with kubeadm and kubelet v1.11+
   46  [Service]
   47  Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
   48  Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
   49  # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
   50  EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
   51  # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
   52  # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
   53  ## The following line to be added for CRI-O
   54  Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=systemd"
   55  EnvironmentFile=-/etc/sysconfig/kubelet
   56  ExecStart=
   57  ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS $KUBELET_CGROUP_ARGS
   58  EOF
   59  export VERSION=1.23
   60  export OS=CentOS_8_Stream
   61  curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
   62  curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
   63  yum install cri-o cri-tools
   64  systemctl daemon-reload
   65  systemctl enable crio
   66  systemctl enable kubelet
   67  reboot
   68  uptime
   69  kubeadm init  --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.23.2 --ignore-preflight-errors all
   70  crictl --runtime-endpoint /var/run/crio/crio.sock ps -a | grep kube | grep -v pause
   71  mkdir -p $HOME/.kube
   72  cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   73  chown $(id -u):$(id -g) $HOME/.kube/config
   74  export KUBECONFIG=/etc/kubernetes/admin.conf
   75  systemctl get kubelet
   76  systemctl status kubelet
   77  echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> ~/.bashrc
   78  systemctl daemon-reload && systemctl restart kubelet
   79  systemctl status kubelet
   80  curl https://docs.projectcalico.org/manifests/calico.yaml -O
   81  kubectl apply -f calico.yaml
   82  ls
   83  kubectl get pod --all-namespaces -o wide
   84  kubeadm init --apiserver-advertise-address=192.168.1.30 --pod-network-cidr=10.244.0.0/16
   85  clear
   86  kubeadm init --apiserver-advertise-address=192.168.1.30 --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors all
   87  history
   88  history > history.txt
