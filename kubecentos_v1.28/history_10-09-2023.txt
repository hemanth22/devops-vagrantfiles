df -hT
clear
yum install yum-utils nfs-utils bash-completion git -y
yum install epel-release yum-utils device-mapper-persistent-data lvm2 wget -y
yum install curl jq tar -y
yum install perl perl-Digest-SHA -y
systemctl stop firewalld
systemctl disable firewalld --now
systemctl mask --now firewalld
systemctl status -l firewalld
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system
cat <<EOF | sudo tee /etc/modules-load.d/crio.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sysctl --system
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
EOF

setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
swapoff -a
cp -vf /etc/fstab /etc/fstab.bak
sed -i '/swap/d' /etc/fstab
yum repolist -y
export OS=CentOS_8_Stream
yum list --showduplicates kubeadm --disableexcludes=kubernetes
export VERSION=1.28:1.28.0
curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
yum clean packages
yum install cri-o -y --disablerepo=kubernetes
yum install -y kubelet-1.28.0-0 kubeadm-1.28.0-0 kubectl-1.28.0-0 --disableexcludes=kubernetes
yum list --showduplicates kubeadm --disableexcludes=kubernetes
wget https://rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/containers-common-0.1.40-11.el7_8.x86_64.rpm
yum install -y containers-common-0.1.40-11.el7_8.x86_64.rpm
rpm -qa | grep kube
rpm -qa | grep cri-o
cat /etc/yum.repos.d/kubernetes.repo
yum install -y kubelet-1.28 --disableexcludes=kubernetes
yum install -y kubelet  --disableexcludes=kubernetes
yum install -y kubeadm --disableexcludes=kubernetes
yum install -y kubectl --disableexcludes=kubernetes
wget https://rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/containers-common-0.1.40-11.el7_8.x86_64.rpm
yum install -y containers-common-0.1.40-11.el7_8.x86_64.rpm
rpm -qa | grep kube
rpm -qa | grep cri-o
cp -v /vagrant/10-kubeadm.conf /vagrant/10-kubeadm.conf.backup
cp -v /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf.backup
rm -vf /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
sed -i -e 's/\r$//' /vagrant/10-kubeadm.conf
echo "" >> /vagrant/10-kubeadm.conf
cp -vf /vagrant/10-kubeadm.conf /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
systemctl daemon-reload
systemctl enable crio --now
systemctl enable kubelet --now
kubeadm init  --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.28.1 --ignore-preflight-errors all
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> ~/.bashrc
source ~/.bash_profile
curl https://docs.projectcalico.org/manifests/calico.yaml -O
cp calico.yaml calico.yaml.backup
sed -i -e 's/# - name: CALICO_IPV4POOL_CIDR/- name: CALICO_IPV4POOL_CIDR/' calico.yaml
sed -i -e 's/#   value: "192.168.0.0\/16"/  value: "192.168.0.0\/16"/' calico.yaml
kubectl apply -f calico.yaml
systemctl restart crio
systemctl status crio
kubectl get pod --all-namespaces -o wide
kubectl get nodes
kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl taint nodes --all node-role.kubernetes.io/control-plane-
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
   curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl --version
kubectl version
kubectl --client-version
man kubectl
clear
kubectl get pod --all-namespaces -o wide
kubectl get nodes
kubectl get nodes --all-namespaces -o wide
kubectl top nodes
kubectl top pods
chmod 755 /etc/kubernetes/admin.conf
getfacl /etc/kubernetes/admin.conf
kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
kubectl get all -n kube-system
kubectl create deploy nginx --image=nginx:alpine --port=80 --dry-run=client -o yaml  > nginx.yaml
kubectl apply -f nginx.yaml
kubectl expose deploy nginx --port=80 --target-port=80 --type='LoadBalancer' --dry-run=client -o yaml > svc-nginx.yaml
kubectl apply -f svc-nginx.yaml
kubectl get all
cat /etc/kubernetes/manifests/etcd.yaml | grep file
history > kubectl.installation.repo
cat kubectl.installation.repo 
clear
kubectl get all
curl -v localhost:80
clear
df -hT
clear
df -hT
ls -ltr
ls -ltrh
clear
kubectl get pods
kubectl get pods --all-namespace
kubectl get pods --all-namespaces
kubectl get endpoints
curl -I 10.85.0.10:80
curl 10.85.0.10:80
clear
kubectl get pods -o wide
kubectl get svc -o wide
ls
kubectl delete -f svc-nginx.yaml 
kubectl delete -f nginx.yaml 
clear
df -hT
lsblk
parted /dev/sda print free
pvdisplay 
vgdisplay 
df -ht
df -hT
